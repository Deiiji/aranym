2002/05/22 - STanda
- The aranymfs atari sources updated. The MetaDOS part was converted
  into the gcc compilable code (Makefile created) and the mint .XFS
  source was added.
  The binaries (.bz2 packed) was updated with the newly compiled files.
  You might want to try them to test whether they work as the previous
  ones.
- atari/fvdi/utility/fvdicout: The Ptermres should be now filled with
  a correct value IMHO. 


2002/05/20 - Heiko Achilles
- when a mouse movement package is fetched from the ACIA/IKBD buffer this
  patch puts all movements of the same type, which are currently in the
  buffer, into one. So the fetching is quicker and there's no noticeable
  mouse delay anymore.
  TODO: replace bool inGet with proper semaphores


2002/05/14 - milan
- vm_alloc.cpp: better structure, not own OS dependent includes

- main.cpp, main_unix.cpp, aranym_glue.cpp, cpu_emulation.h:
    some debug outputs added for JIT compiler
    a small reform in memory allocation
    one stupid bug (of course, I'm the author) found in QuitEmulator
    (vm_release(nil))

- JIT compiler: one debug output added for segfault handler of JIT compiler


2002/05/12 - milan (record in ChangeLog by joy)
- ata.cpp: updated to bochs' latest source (supported SEEK and something else)


2002/05/10 - milan (record in ChangeLog by joy)
- input.cpp: hack for remounting CD on Ctrl+SysRq, needs to be removed!
- gencpu.cpp: lotsa weird changes, probably related to distributed dispatcher
- newcpu.cpp: minor distributed dispatcher related changes
- JIT compiler: one segfault fixed


2002/04/29 - joy
- ErrorAlert() has been replaced with panicbug() as I needed sprintf
  like parameter parsing. Now all file errors in main() report also
  the problematic filename.


2002/04/25 - STanda
- The fvdicout.app added to atari/fvdi/utility. This is the Johan'si
  bconout.gtp replacement. It is built using the FreeMiNT CVS tree
  and with heavy utilization of the TosWin2 vt52 emulation sources.
  It needed only a slide changes in TosWin2 sources. This should not
  be the final solution. The real one would by to implement the vt52
  emulation into the fVDI engine itself which is on the TODO list in
  the fVDI remainings. 
  Using this I don't have problems here with TOS applications here.
  It needs to be started after the VDI initialization (e.g. from the
  desktop). There might be some code to initialize the VDI later in it.
- AraEther made compilable. nearly no code chceck or test done.

 
2002/04/21 - milan
- header files reform
- distributed dispatcher rewroted
- JIT compiler integrated


** Version 0.1.7

2002/04/21 - milan
- pre-support of FreeBSD


2002/04/21 - joy
- ExtFs: Dpathconf(DP_XATTR) disabled altogether. It was causing problems
  in Thing (Thing didn't refresh source window of 'move' operation).
- $7135 illegal insn (debug print) was not printing until LF was sent.
  fflush added.
- SDL GUI, taken from hatari. Not working yet, but soon will be.
- atari sound driver (from Didier) included in atari/sound CVS folder.
- EmuTOS loading: now checked for proper file length.


2002/04/20 - joy
- audio.cpp - wrong memset() addr fixed. No more crashes, sound works
  like a charm.

2002/04/20 - STanda
- PurePascal and its debugger snapshot added.
- ExtFs: Small general code cleanup


2002/04/19 - Didier MEQUIGNON & joy
- audio driver: Atari side uses ZMAGXSND.PRG, a slightly modified
  MagiCMac sound driver. The communication is based on illegal instruction
  $712c and IRQ 5 used as a callback from host to Atari. Aniplayer is
  supposed to play sound nicely but so far it's crashing on me (joy).

2002/04/19 - STanda & joy
- ExtFs: JOY have discovered that ExtFs:Fxattr should probably _not_
  take the DTA structure. This bug was originating in the Julian
  Reschke's cookfs01 driver sources that I started to program from
  (he uses DTA in the Fxattr signature, although he never uses this
  argument - most probably cut&paste bug).
  Now the Fxattr works properly which means:

  * The Dpathconf() DP_XATTR return value works also good for Thing
    to refresh the destination window. The access time and originating
    time was masked out here to let it work for more hostfs filesystem
    types properly. It is subject to change. The hostfs mounted to the
    particular hostfs path is to be investigated whether it supports
    the features and the flags should be set appropriately.
  * QED save and load problems fixed.

  Here it seems that the most ExtFs MetaDOS problems on Linux host
  OS are gone. Please test heavily. Thanks goes to JOY and his hackers
  history! ;)

- ExtFs namespace method/function recognition doesn't work under
  FreeMiNT because mintbind.h are only macros..... The names were changed 
  to have the ExtFs suffix.


2002/04/18 - STanda
- ExtFs bug in Fsnext fixed. If the path for Fsfirst doesn't contain
  wildcards then many applications don't call the Fsnext. We need an
  array of paths for mutiple Fsfirst/Fsnext called with a different
  DTA buffer pointer. We also need to free the paths if they are not
  used any more (Fsnext with -49 or Fsfirst without wildcards and 0).
  If the path was freed from the array then we return -49 from Fsnext
  now.
  This fix causes LZHSHELL.APP be able to extract an archive to the
  MetaDOS driven filesystem.
- The Patrice's patch adjusted to be only namespace distiguished
  calls. No _emu suffix. Needs to be tried to compile under FreeMiNT.


2002/04/13 - joy
- AranymFS: we can't rely on error codes returned by hostfs functions.
  For example TOS Fcreate() returns -34 if the path to file does not exist.
  The fix I put there helps ST-Zip to unpack folders onto host fs.

- AranymFS: Dpathconf(DP_XATTR) disabled (because I didn't know the correct
  parameter). Suddenly Thing is able to refresh the destination window
  correctly.

- new experimental spec file for building RPM package.

- new TOS patch for redirecting printer Xconout vector to host console

- new function "Reboot" that does hard restart of the machine.


** Version 0.1.6

2002/04/12 - joy
- newcpu.cpp: NMI will break out of the STOP jail. From user point
  of view - if EmuTOS happens to crash you'll be able to quit ARAnyM
  now.

- newcpu.cpp: STOPped CPU did not generate 200 Hz system interrupt
  when compiled with --disable-sdltimer. Fixed.


** Version 0.1.5

2002/04/10 - joy
- fixed bug in Reset insn emulation that caused EmuTOS crash

- uae_cpu/spcflags.h cleaned up. NMI flag introduced.
  I also added the MFP|VBL|NMI into periodic flags check (wondering
  how it could work before).

- clean Quit implemented. No more killed SDL or X threads. Using NMI
  like on real machine :-)


2002/04/10 - milan
- IDE: synced with Bochs CVS (concat_image_t(), not used in ARAnyM now, but
       who knows)
- CPU: instr. Reset calls now AtariReset()
       cleaning in JIT integration
       synced with BasiliskII CVS (DOTRACE x STOP)


** Version 0.1.4

2002/04/09 - joy
- fixed my own stupid bug in acsifdc.cpp that broke floppy support.
  Thanks Martin for reporting it.


2002/04/04 - STanda
- MetaDOS Fopen implementation shoudn't be able to open a directory.
  Fixed due to the Olivier Landemarre <Olivier.Landemarre@utbm.fr>
  and the CharView author who provided a source of the application
  that had this problem. The EasyGEM library tries to open directory
  entries using Fopen. Thanks for EasyGEM beeing open-source.

- Newly created files specified with all letters in upper case will
  be automatically converted to lowercase ones. This follows a small
  limitation that there is no way to create e.g. PC.PRG on halfsensitive
  fs (it will be pc.prg... but the Pc.prg and any other combination
  would work). This can be made optional.

- m68k part of the MetaDOS driver was pretty printed and converted
  to correct (DOS mode newlines). No need to update the binary here.

- PureC (PC.PRG) patch to let it working on MetaDOS driven filesystem
  (src/atari/tools/pcpatch.*).


2002/04/03 - milan
- sync with BailiskII-JIT (25.3.2002)


2002/04/02 - Patrice Mandin & milan
- pre-patched for Atari MiNT :-)


2002/04/02 - joy
- MFP and ACIA/FDC/ATA updated to be ready for major MFP rewrite.


** Version 0.1.3 - don't forget to update your Atari fVDI driver

2002/03/27 - STanda
- extfs.cpp/transformFileName rewritten nearly from scratch. Now it should be
  more readable source than before.
  A simple findFirst function fix: no error on the stat() failure. E.g.
  an invalid symbolic link on the host fs.
- fVDI driver: floating Videoram bug fixed.


2002/03/26 - milan
- MMU returns logical address during bus error
- IEEE FPU is default only for i386


2002/03/26 - joy
- transformFileName in extfs.cpp fixed three times. ARAnyM will not crash
  when it encounters a long filename. ST-Zip will not crash when browsing
  MetaDOS drive. Maybe that PureC works now as well?


2002/03/22 - joy
- IEEE FPU emulation fixed: 68040 specific insn (like FSMOVE) don't throw
  illegal opcode exception anymore.
- IEEE FPU is now the default FPU emulation in configure phase.


2002/03/21 - milan & joy
- forgot to set the faulty address when invoking BUS ERROR from hardware
  registers access.
- Exception 2 panicbug displays the faulty address now.
- wrong bus error stack frame format 7 fixed.


2002/03/20 - joy
- MFP and RTC tweaking to get Linux-m68k running


2002/03/15 - milan
- Exception() is called only from main loop, not from trans. function.


2002/03/14 - Olivier Landemarre <Olivier.Landemarre@utbm.fr> & STanda
- ExtFs: ugly bug in flags2st fixed. This might affect some problems
  we had with the MetaDOS driver, but unfortunatelly PureC still refuses
  to compile a project.
  Preprocessor flag to use creat() instead of open() in Fcreate
  implementation... no improvement here though (just suggestion from Olivier).


2002/03/12 - milan
- Irix among supported platforms


2002/03/11 - milan
- MMU is back, based on Wez Furlong's patch (UAE)


2002/03/06 - STanda
- ExtFs: xfs_getname implemented. The Pure C now finds the project file, but
  it crashes on assembler compilation.
  The ExtFs::cookie2Pathname() now uses getHostFileName to be able to work
  case insensitively.


2002/03/05 - milan
- memptr for addressing in Atari memory out of uae_cpu
- sync with Bochs CVS 2002/03/02 11:31:18 GMT
  o ReadCDSector() (for win32 ASPI) returns 1 if target status is okay
  o win32 ASPI version of insert_cdrom() checks media status using
    ReadCDSector()
- gencpu.c patched for MMU (based on Wez Furlong's MMU patch 0.8.20.2 for UAE)


2002/03/03 - Gwenole Beauchesne & milan
- fpu_x86 debug mode corrected


2002/02/28 - milan
- get_i*_1 moved to newcpu.cpp
- probably last sync with aranym2 (unofficial CVS) before MMU and pre-JIT
  support (new gencpu.c and subdirectory compiler)


2002/02/27 - milan
- corrections of types in hostscreen.h and memory.h (using uintptr instead of
  uae_u32 with Host addressing)


2002/02/26 - milan
- Native Feature instruction framework added
- address validation in CPU interface
- exceptions.h removed, interface moved to CPU interface, include file in
  sysdeps.h
- error handling of CD-ROM eject on Linux


2002/02/25 - milan
- fp_extended, fp_single, fp_double -> fpu_extended, fpu_single, fpu_double
- spcflags handling rewritten
- original PC handling, must be converted to ARAnyM's after stabilisation
  (slower)
- exception stack handling is for 68040 now
- table68k based on JIT BasiliskII
- EmulOp (0x71XX) is handled as usual instruction


2002/02/25 - joy
- web updated (Ctirad wrote new About)
- simplified most of the presentation.xlst but it's still not good enough.
- limited the text size to 600 pixels for more pleasant reading on wide screens


2002/02/23 - joy
- separated input related code from main.cpp into input.cpp
- all open() functions have "O_BINARY" flag appended so that Cygwin
  binaries won't mess CRLF in files (cdrom.cpp, extfs.cpp, fdc.cpp)


** Version 0.0.22 so you can see new IDE code is there.

2002/02/21 - milan & joy
- cdrom.cpp sync with Bochs (CD-ROM eject supported)
- ata.cpp sync with Bochs (32-bit data access supported)
- CD-ROM eject in Linux added
- hardware.cpp + ide.cpp updated for 32-bit IDE data access.
  It did not work so it is disabled in ide.cpp for now.


2002/02/20 - joy
- config file is created with proper default values
- IDE devices are disabled by default
- CONFGUI obsolete #ifdef stuff removed from parameters.cpp


2002/02/20 - milan
- new FPU (based on JIT BasiliskII)


2002/02/19 - milan
- src/ <-> CPU interaction cleaned
- memory access cleaned


2002/02/18 - milan
- floating VideoRAM


2002/02/18 - Olivier Landemarre <Olivier.Landemarre@utbm.fr> & STanda
- Compilation problem under Cygwin fixed. In extfs.c for Cygwin
  MFSNAMELEN is undefined should replace by buf.f_namelen. The condition
  was added due to the BSD systems so I've changed it to if OS_*bsd then...


** ARAnyM 0.0.21 released

2002/02/12 - joy
- IDE emulation adapted for Falcon: $f00039 is recognized but ignored.


2002/02/12 - milan & Thomas Huth
- ARAnyM support only 68040 only. Other CPUs aren't generated


2002/02/11 - milan
- synced with Bochs IDE
- new version of CPU interface


2002/02/01 - Frank Naumann & joy & milan
- PAGE_MASK renamed on ARAM_PAGE_MASK (ARAnym Memory PAGE_MASK), PAGE_MASK is
  defined in /usr/include/machine/param.h on OpenBSD
- PAGE_CHECK renamed on ARAM_PAGE_CHECK
- ndebug doesn't use ioctl() now for any switching tty's setting
- support for statfs on [Net|Open]BSD


2002/02/01 - joy
- fixed long-standing bug in ATA.cpp that made ARAnyM stuck when no IDE disk
  drive was found (or defined in config).


2002/02/01 - milan
- the 1st step of rewriting CPU/Memory <-> HW interface, look at
  cpu_emulation.h


2002/02/01 - STanda
- MiNT aranym.xfs added. This is the preliminary version working with HostOS
  root in u:\nativefs just like stonx.xfs does. The mapping to other folders
  is possible and is going to be done later.
  There are several unimplemented functions there, but the basic functionality
  is implemented.
  The m68k part is available only as a binary in src/atari/aranymfs.
  The sources were grabbed from the STonX directly and hacked just to work and
  needs cleaning.
  The whole ExtFs should be rearchitectured. It was designed for MetaDOS and
  now it is getting very, very unclean. Better not to look into the code.
  I will rewrite this nearly from scratch during the planed shift to a portable
  library.
  CAUTION: There might be crude bugs in it, so please test it on some not very
  essential files on the mounted host filesystem.


2002/01/30 - joy
- emul_op.cpp: OP_DEBUGUTIL made more secure (wrong addr will not crash aranym)


2002/01/29 - joy
- two EmuTOS screenshots added
- unsupported Windows binary available in download section


** ARAnyM 0.0.20 released

2002/01/28 - joy
- tools/clocky.prg.bz2 updated - the hotkey combo is back at LShift+RShift
  (the Alt+LShift collided with Thing).
- updated aranymrc.example
- updated most documentation and web pages


2002/01/27 - joy
- XHDI dispatch added to emul_op
- XHGetCapacity() implemented
- DMAread() improved


2002/01/26 - STanda
- extfs.[ch]* cleanup from non needed arguments


2002/01/24 - Olivier & joy
- on Windows the host operations (fVDI, aranymfs) block the timer thread
  so we have to call the invoke200HzInterrupt() manually as soon as the
  host operations finish.
- download.html offers nightly snapshots now.


2002/01/18 - milan
- FixedSizeFastRAM fixed
- no debugger fixed
- install part of Makefile fixed


2002/01/17 - milan
- cleaning in ./src - memory access etc.


2002/01/15 - joy
- you can undefine USE_GETTICKS in main.cpp to replace SDL_GetTicks()
  with gettimeofday(). This might help on platforms where SDL_GetTicks()
  is slowed down by aranymfs or fVDI driver.


2002/01/13 - STanda
- fVDI driver patches for expandArea in 24 and 32bit depth.
  Also the 1, 2, 4 bit depth modes were made available.
  There are still bugs in the expandArea Mem->Mem. Also blits are word
  aligned when they shoud not be.


2002/01/13 - joy
- DMAread() added to emul_op interface (used in current EmuTOS)
- faq.xml updated by Ctirad
- configure.in: SDLTIMER and PAGE_CHECK are enabled by default.


2002/01/11 - Olivier Landemarre & joy
- fixed bug in time sync (signed long is bad for GetTicks())
- fixed bug in TimerC disabling (wrong bit mask for &)


2002/01/10 - Rodolphe Pineau & milan
- vm_acquire_fixed corrected, configure script also


2002/01/09 - Rodolphe Pineau & milan
- 1st step for SGI/Irix
- aranymfs more portable (Solaris supported now also)
- corrections in configure script, memory allocation, memory access


2002/01/08 - STanda
- The aranymfs config file setting finished (thanks to JOY)
- fVDI driver doesn't destroy palette setting on resolution change
  The SDL_SetVideoMode clears the palette setting -> the palette is stored
  and restored after change (hostscreen.cpp/setWindowSize()) 
- the driver has also correct 8bit inverse color handling.
- up and running


2002/01/08 - joy
- the config file format and location has changed (now at $HOME/.aranym/config)
- most global config variables moved to bx_options struct
- NVRAM (formerly CMOS) file is stored in the aranym config folder as well now.
- fixed many bugs in the parameters.cpp code. It should be quite usable now.


2002/01/07 - joy [ ARANYM_0_0_17 tag ]
- NVRAM RTC getting current year fixed.


2002/01/07 - Patrice Mandin <pmandin@caramail.com> & STanda
- Patrice: I did a simple patch for the vdi color mapping.
  The following ugly piece of code removed.
  #ifdef __PUREC__
     short vdi2pix[1];            /* Of course really 256... */
  #else
     short vdi2pix[0];            /* Of course really 256... */
  #endif


2002/01/05 - joy
- floppy geometry detection fixed. It could never work before!


2002/01/03 - joy
- Blitter now calls Do_Blit() on reading status register only. Doesn't seem
  to fix the errors during Bconout, though.
- Xconout redirected to host console using poor VT52 emulation.


2002/01/03 - STanda
- fVDI driver: the resolution is changed during the virtual workstation
  creation. Copyright notes updated (synchronized with Johan's).


2001/12/30 - joy
- Johan increased PAGE of PAGE_CHECK to 1MB (for nonMMU mode). This greatly
  improved the performance - 36k5 dhry on my machine now. For the MMU040
  the PAGE is 4kB.


2001/12/29 - joy (tagged as ARANYM_0_0_16)
- Johan Klockars' PAGE_CHECK (dividing address space into 4k blocks) added.
  It produces slightly better dhrystones than 0.0.14 (34k2 vs 33k5) but
  real-life gcc benchmark didn't show any speed up. Perhaps this is a great
  idea for the MMU040 implementation but without MMU040 it doesn't help much.
- parameters.cpp and main.cpp cleaned up a bit.


2001/12/27 - joy (tagged as ARANYM_0_0_15)
- FastRAM can be fixed size ("./configure --enable-fastram=X") - that makes the
  check_ram_boundary() even faster (comparing with constant instead of fetching
  the value of a global variable). 35k2 dhry now (this is probably the fastest
  possible solution before splitting the RAM into 4k blocks as Johan suggested.
- TOS 4.04 patched to enable FastRAM check.
- fullmmu is disabled by default now.


2001/12/26 - joy (tagged as ARANYM_0_0_14)
- handling of MFP interrupts moved from CPU to MFP module
- checking for VBL and MFP joined in one 'if' - another nice speedup (33k5 now)


2001/12/25 - joy (tagged as ARANYM_0_0_13)
- ACIA IRQs are not buffered (like TimerC IRQs are) - it was causing bad
  keyboard&mouse lockups. Apparently TOS can read several scancodes from IKBD
  in one IRQ and our poor implementation fits that feature :-)
- TimerC interrupt fired only if enabled in MFP IRQ enable reg.


2001/12/22 - joy (tagged as ARANYM_0_0_12)
- most video related parameters moved to bx_options.video struct
- added "--refresh <x>" cmdline option. Default value is 2 = 50/2 Hz screen
  refresh. Allowed values are 1 - 200 (50Hz - 1/4 Hz)
- check_ram_boundary() allows direct access to physical videoram
- check_ram_boundary() now makes FastRAM equally fast as ST-RAM (30k5)


2001/12/21 - STanda
- RH gcc 2.96.98 preprocessor bug workaround: The remarks in multiline macros
  are before the linetrailing backslash.


2001/12/20 - joy
- cleaned up newcpu.cpp do_specialties()
- STOP instruction handling really works and gives CPU time slices back
  to host OS!


2001/12/19 - joy
- check_ram_boundary() cleaner now - no default value for 'write' parameter
  and the 'size' parameter contains the natural value - 1 for byte access,
  2 for a word access and 4 for a long (doubleword) access.
- you can define NO_MEMORY_CHECK in memory.h to see the original
  speed of old unsafe, often crashing ARAnyM (Dhry: 27k -> 31k)


2001/12/17 - joy
- SDL Timers are back! --enable-sdltimer
- VBL timer runs at precise 50 Hz now
- VIDEL screen refresh at fixed 25 Hz now


2001/12/16 - joy
- check_ram_boundary() takes an additional parameter that sets the size 
  of memory access. Now finally all memory accesses are checked and nothing
  can escape from ARAnyM allocated memory.

- acceleration for blitter configurable: --enable-blitmemmove turns the
  memmove acceleration on and --enable-blitsdlblit allows the SDL_blitsurface
  to be used.

- check memory by array experimental code removed altogether. It was not
  faster unfortunately and it didn't allow the size check that has just been
  added to check_ram_boundary.


2001/12/11 - STanda
- fVDI driver patch to not disable the DEBUG. There was the debug.h included
  from another .h file which wasn't correct. Some Johan's methods were moved
  to the .cpp file.

- framebuffer driver detection to force the fullscreen mode and therefore
  no mouse pointer redraw problems when using Clocky(TM). The mouse cursor
  was trying to leave the window (actualy the screen surface in fb, which
  was causing troubles)

- The SDL_WarpMouse is now called after the HWInit() (actualy SDL_SetVideoMode)
  where doesn't cause floating point exceptions and aranym crashes in fbcon.
 

2001/12/07 - joy
- first two long words (addresses 0..7) are readonly now like on real Atari.
  Thanks to Patrice for forcing us to fix it :-)


** ARAnyM 0.0.11 released

2001/12/05 - joy
- "-N" or "--nomouse" added to cmdline options. It basically disables
  the auto mouse grabbing at startup. Suitable especially for debugging.

- one more illegal/emul_op instruction enabled: 0x7135 can be used for
  debug prints - especially for EmuTOS debugging.

- CMOS/NVRAM now starts with English/UK/USA keyboard layout. Thus you get the
  right keys even without Clocky on most regular PC keyboards.


2001/12/05 - milan
- "initialization" of 0-7 moved to reset routine, more secure solution

- patched ins. BFINS (uae 0.8.19)

- sync with my "Pragues versions"

- buffer in newm68k_disasm cleared after every ShowEA/fprintf, disasm in
  ndebug corrected


2001/12/03 - Olivier Landemarre <Olivier.Landemarre@utbm.fr> & STanda
- ExtFs: Frename fix.


2001/12/02 - joy
- keyboard conversion code rewritten again. As the SDL returns different
  scancodes for same keys under different OSes I created a heuristic
  analysis of pressed keys that tries to detect the offset between the
  SDL scancode and the physical one. Tested under framebuffer and X11 on Linux.


2001/11/30 - Johan Klockars <rand@cd.chalmers.se> && STanda
- fVDI: improved and made fit into fVDI CVS repository directory structure.
  General speedup of line and polygon drawing. 
  New copy of m68k part sources. Since now you should use the aranym.sys.bz2
  m68k binary along with current aranym CVS sources.
  The old m68k part source will be removed later.


2001/11/28 - joy
- new keyboard conversion code: now based on pure scancodes. Clocky for Aranym
  now distributed with English PC101 keyboard. With Clocky loaded you have real
  WYSIWYG. Feel free to submit other .KBD files for Clocky (French, German,..?)

2001/11/25 - joy
- new FastRAM.PRG with automatic size detection and _FRB buffer.

2001/11/21 - milan
- cleanning in includes


2001/11/21 - Olivier Landemarre & milan
- problems with new Cygwin corrected

- FullScreen tag in ARANYMRC


2001/11/20 - milan
- small correction in ATCs (MMU), not enough, grr


2001/11/20 - Francois LE COAT & milan
- better support for Solaris


2001/11/20 - Olivier Landemarre & milan
- the 2nd step for Cygwin


2001/11/19 - joy
- MD5 should be OK on big endian machines (Sparc)

- new TOS 4.04 patches - cleaned up a lot thanks to the disassembly made by
  Patrice. Nemesis init routines removed. Reboot code not moved to $600.
  Movem patch removed. The whole additional code moved behind the TOS end
  so French and other RSCs are OK now.
  You are encouraged to drop the previously patched TOS versions and to use
  just plain original TOS 4.04.

- parallel port emulation added. This is the lowelevel stuff - Yamaha and MFP
  are mapped to IBM EPP parallel port. Several things are hardcoded and
  the whole stuff is disabled by default for now. But when I tested it PARCP
  ran quite well!


2001/11/02 - STanda
- fVDI: The driver handles some bitplane functionality. It works somehow, but
  it still has many bug in this mode. The color palette is correct only if
  booted in the same color depth.


2001/11/14 - joy
- corrected XML->HTML compilation

- made the IDE f00039 alternate status register same as the main IDE status reg.


2001/11/13 - milan
- web/Makefile corrected

- saxon.jar not in CVS now (downloaded with wget from ftp.sophics.cz/pub/aranym/tools)

- gemram removed from Makefile.in


2001/11/13 - Olivier Landemarre & milan
- support for Cygwin


2001/11/11 - joy
- during configure you can "--enable-directcolor" which is the infamous TOS
  and Aranym patch for direct truecolor with VIDEL. I made it configurable
  in compile time to simplify the memory boundary checks in uae-cpu/memory.h.
  The default is no direct truecolor (it's a hack, after all).

- during configure you can "--enable-boundaryarray" which is a different
  method for checking the memory boundaries. It's based on an array of bool
  flags - each bool represents 1 MB of memory. There are separate tables
  for reading and writting because you can't write to the ROM area.
  Advantages:
    o FastRAM is finally no slower than ST-RAM
    o ST-RAM and FastRAM size can be configured in runtime very easily
    o you can even simulate memory windows (FastRAM SIMM banks, e.g.)
    o regular memory access gets a higher priority over HW reg access
    o the code might be faster than the original 5 comparisons
  Disadvantages:
    o the whole megabyte of ROM area is readable (so including 0xe8-0xefffff)
    o the code might be slower than the original due to indexing in 4 kB array

- a change in IKBD emulation that fixes the problem with slow mouse motion
  in Videlity Config prg.


2001/11/07 - milan
- new correction in mmu_decode_addr, I suppose still not enough


2001/11/06 - milan
- corrections of PFLUSH, PTEST (I found my old corrections on hd, grr, 2 months
  old, grr)

- MMU address decoding works now (after set_mmu Desktop runs, sometimes),
  but still MiNT (and not only MiNT) gives Bus error/illegal instruction, I
  know about one bug, I'll correct it later.

- mmusetup.cnf example added to reposity

- make install and Debian package corrected

- the 1st step for Solaris


2001/11/06 - joy
- TOS was patched with WinX by a mistake. Fixed. GEMRAM 1.0 from Aratools
  does not work correctly as the ROM area is not writeable. Use real GEMRAM
  instead.


2001/11/05 - STanda
- VIDEL: Since now we are using 8bit SDL surface for all VIDEL depths
  less than 16. The blitting routines were optimalized (the destBPP checks are
  done outside the main blit loop). The #define SUPPORT_MULTIPLEDESTBPP enabled
  to let support VIDEL definitely 8, 16, 24 and 32 bit destination depths.


2001/11/02 - STanda
- fVDI: The driver now normally initializes to 16bit when no mode option
  is provided in the fvdi.sys. The screen size remains the same as before
  fvdi.prg initialization then.


2001/11/01 - joy
- mouse behaviour much improved. Automatic grab is configurable now. You can
  ungrab the mouse by Alt+Ctrl+Esc and grab it back by left mouse click.

- new command line option "--save" will save the config file with actual
  values.


2001/11/01 - STanda
- fVDI: The 16,24 and 32bit modes works now.


2001/10/31 - STanda
- fVDI: The resolution change works now with the current driver. Do not try
  to compile the m68k part, it's just full of hacks, but it works for me.
  Just use the binary from CVS. The only useable is the 16bpp in any resolution
  in X11. I didn't try it in framebuffer or so.


2001/10/30 - STanda
- The HostScreen support for 8,16,24 and 32 BPP finished. Many optimalizations
  done in getting the switches out from loops. There should be some speedup, but
  this I can't see on my computer and I didn't even try to make any benchmarks.


2001/10/29 - joy
- --floppy <path> added to the command line options

- --rom <path> removed

- EmuTOS=<path> in the config file. EmuTOS gets a higher priority over the TOS.

- updated aranymrc.example


2001/10/29 - milan
- ARAnyM can be used now without support of debugger (--enable-debug=no)

- ndebug can be activated now also if you send SIGINT to ARAnyM (and that's
  why it cannot cooperate with cxmon)

- ndebug is now default debugger

- support for gmake

- --config FILE command line option added

- the command line options are scanned for version/help/config before
  parsing of a configuration file


2001/10/26 - milan
- support for instruction history now also in ndebug

- small change in m68k_run_1


2001/10/25 - joy
- when the aranym catches segmentation fault it releases mouse and keyboard
  and shows last 20 instructions prior the segfaulting instruction (only
  if compiled with --enable-fullhistory).

- InitROM() asks for 512 kB long file (on the net there are just 256 kB ROM
  images).

- Floppy stuff moved to fdc. Automatic mounting - first read/write with
  fallback to read only. Media Change trick prepared but disabled for now
  because the floppy does not read past 499 sector (try e.g. Diskus Read Test).
  Dunno what's wrong. Wonder if the floppy ever worked correctly?


2001/10/24 - STanda
- fVDI: Essential bugfixes added. Now the driver works properly except for the
  bugs in the fVDI engine. These are discussed with the fVDI author.
  The lines with a negative y coordinate are drawn properly now.


2001/10/23 - STanda
- Screenshot added to the website.
- fVDI: Mouse Is not hidden at the right and bottom screen edge.
  Is colorized properly. The shape's hotspot shift implemented.
  Shouldn't crash on higher resolutions than 640x400.
  Put pixel fixed to take the pattern in mind.
  The lineClipping fixed. The lines that starts and ends out of the screen
  are not drawn due to the fVDI.PRG beta engine.. the beta crashes sometimes too)
  The v0.95 works quite well, but with display bugs like no pictures in
  ST-Guide, wrong colors of Thing's keyboard cursor.
- the hardcoded screen resolution changed to the hostScreens one
  in mouseOut handling.


2001/10/19 - STanda
- fVDI: The driver updated to work with FVDI.PRG beta. This beta enables
        e.g. the monochrome images in ST-Guide and fixes many bugs.
        There is still a bug in new line clipping, but I just don't have
        time to fix it now. I know exactly what is the problem.


2001/10/18 - joy
- MD5 class added
- InitROM() detects both our ABTOS and the original TOS 4.04.
- InitROM() patches TOS 4.04


2001/10/17 - STanda
- README The sophics.cz replaced by atari.org for http access. The ftp
         and email addresses was left. (I don't know wheter aranym@atari.org
         works and the ftp must stay @sophics, the absolute path problems)
- ExtFs: Small bug fix. The Fsfirst&next returns the . and .. dirs too.
         (according to Julian Reschke's advice)
- Tools: The changes that were made and uploaded to JOY's ftp are in CVS now
         The README was modified a bit.


2001/10/16 - STanda
- fVDI:  The segfault bug in gfxLineColor removed.
- VIDEL: The 16, 24 and 32 destBpp are supported when #define SUPPORT_MULTIPLEDESTBPP
         in videl.cpp (the SDL surface depth setting is in hostscreen.cpp).


2001/10/16 - milan
- support for BasiliskII's monitor cxmon
- aranymrc now supports FastRAM's size.


2001/10/16 - STanda
- fVDI: The driver should be working now in TC (I finally got the Thing
        executed and looking correctly)


2001/10/09 - milan
- some changes in memory allocation, now support for malloc on dummy platforms


2001/10/08 - STanda
- fVDI: the blitting works on destination 16bpp (still no shadow buffer used).


2001/10/08 - STanda
- ALT+PrintScreen generates a snapshot file using the SDL_SaveBMP.

- Host OS dependent objects moved to the host.cpp(h) and aranym specific
  objects like ExtFs and FVDIDrv moved to araobjs.cpp(h)

- general cleanup of unused variables (fdc.cpp)

- the WEB pages updated


2001/10/02 - milan
- the first "public" version of "ndebug", some modes still disabled

- platform's independent memory allocation, if ARAnyM doesn't know better


2001/10/02 - joy
- ROM file reading back in main.cpp
- TTRAM renamed to FastRAM everywhere
- --ttram renamed to --fastram, -T renamed to -F
- --grab_mouse switch removed
- added 'cookie_MCH' config option, it holds hex long value
- maxInnerCounter in main.cpp should be tuned to your CPU speed.
  The lower your CPU is the lower the value should be.


2001/10/02 - STanda
- fVDI: blitArea screen2screen & mem2screen (TC) works now.

- fVDI, VIDEL: bitplane to chunky conversion is move into the HostScreen
  inline - should cause no performace penalty

2001/10/01 - STanda

- fVDI: drawLine supports the logical operations now.


2001/09/25 - milan
- cleaning of memory allocation


2001/09/21 [ARAnyM 0.0.8] - joy
- in a fVDI session (when VIDEL rendering is disabled) if VIDEL VideoRAM address
  is changed the VIDEL rendering is enabled again. This is essential for example
  when you reset the Atari machine (you want to see the Fuji logo, don't you? :)

- MFP TimerC emulation simplified - no more double TimerC interrupts as we
  are now calling the invoke200HzInterrupt each 5 milliseconds.

- hardware.cpp helper functions removed. Now modules call their public functions
  directly. It's better readable and faster this way, I think.


2001/09/20 - STanda
- fVDI: Off by one bug fixed in fillArea.

- fVDI: Separate functions for transparent and opaque background. gfxPrimitives
  methods moved to the HostScreen. Several methods made inline.
  fVDI driver Shouldn't cause BUS ERROR now.


2001/09/20 - joy
- fixed very annoying bug in direct_tc mode (no more segfaults at $e08ba8 I hope!)

- mouse code for host-client transformation is now conditional (only when not running
  in fullscreen).


2001/09/20 - STanda
- The fVDI driver update: colors work correctly, expandArea implemented
  to display icons and texts, putPixel speedup. Now it seems pretty fast
  when DEBUG is 0 ;)

- gfxprimitives cleanup


2001/09/19 - joy
- TT-RAM (or FastRAM) size entered on command line (--ttram) is in MB now.
- new .aranymrc option named "FastRAM", acts as the --tram switch.
- first release of aratools.tgz, available at ftp.sophics.cz/pub/aranym.
  FastRAM (or TT-RAM?) can be anything from 0 to about 112 MB (then it
  crashes, I suspect it's due to the weird Milan's virtual memory management).


2001/09/18 - joy
- keys remapped: Atari Help is on the F11 host key, Atari Undo is on F12 key.
  Keys PageUp/PageDown are mapped to Atari combo Shift+ArrowUp/Down which
  should work in most GEM programs (handy stuff, you get used to it fairly
  quickly).

- mouse behavior changed: first, it's grabbed automatically and centered
  on standard screen size (640x480). Second, with special tool support
  (right now modified Clocky - you find it in ftp.sophics.cz/pub/aranym)
  you are able to move the mouse out of the Atari aranym window. Works
  just like in vmware. Pity it has hardcoded GEM screen size right now.
  Needs to be fixed - made more flexible.

- ARADATA I/O registers are ready to support arbitrary FastRAM size and
  automatic StandaFS config.sys updating, I just need to write the tools
  for that.


2001/09/11 [ARAnyM 0.0.7] - joy
- real hard fight with Aniplayer. I found that it checks whether there's
  a $CAFEFADE number at $F4000014. This check was killing aranym since
  my check_ram_boundary() was broken (due to a number of stupid bugs).
  Anyway, this CAFEFADE signals that there can be a hardware located at
  that address already (it is flash ROM of Centurbo2 according to Didier)
  and that is a bad sign for us since we wanted to have the host videoram there.


2001/09/10 [ARAnyM 0.0.6] - joy
- proper check_ram_boundary in memory.h. Has to be always enabled, otherwise
  programs like e.g. Aniplayer can kill the whole aranym..
  FastRAM works again (still fixed to 32 MB).

- SDL_Timer is not used anymore. CPU now checks once in a while (currently
  each 100 m68k instructions) whether it's time to emulate an interrupt.
  The original behavior with timers may be enabled with -DUSE_TIMERS.


2001/09/09 - joy
- direct TrueColor works again
- clicking in fullscreen X11 works again (generally mouse grabbing works again)
- disabled the shit in main_unix.cpp (the memory management)
- fixed a few little bugs


2001/09/04 - joy
- milan's port of ata.cpp and cdrom.cpp from Bochs v1.2 now enables direct
  access to CD-ROM! Use "IsCDROM = Yes" in your [IDE1] section of aranym
  conf file.


2001/09/01 - milan
- switch for enabling full opcode's history for debugger


2001/08/31 - milan
- other small corrections for MMU

- memory access now a bit quicker


2001/08/29 - milan
- stupid buggy preversion of TV conf. GUI aranymrc, needs to rewrite in
  better form, something as powertweak's text mode conf. Output in
  aranymtest.rc file. Also needed to find problem with size of strings
  (buffer overflow).

- directive DebugOnStart from ARANYMRC changed to Bool_Tag

- patched stupid mistake by entry of debugger (Alt x Alt+Break)

- some small corrections for MMU

- newm68k_disasm hasn't any problem with memory addressing now
  (set/longjmp problem)


2001/08/29 - STanda

- VIDEL got the doRender flag with setter setRendering().
  The host_colors_uptodate variable name was changed to hostColorsSync.

- HostScreen got the doUpdate flag cleared upon initialization if the HWSURFACE
  was created.

- fVDIDriver got first version of drawLine and fillArea (thanks to SDL_gfxPrimitives).


2001/08/20 - milan

- support for autodetection of a real disk's geometry in Linux, also for
  createdisk.sh's disks, but new version of parameters.cpp needs reorganization
  in IDEx part

- patched ins. SBCD, ABCD, NBCD (uae 0.8.17), BDcc, Scc in table68k patched

- UAE FPU as default FPU (now better than i386 opt!)

- devdist in Makefile


2001/08/16 - Joy

- config file taken from PARCP. Feel free to extend the global_conf struct in parameters.cpp
  with more options.


2001/08/15 - STanda

- the videl.cpp ST compatible color palette handling added (thanks to Ctirad)


2001/08/13 - milan

- bindist in Makefile

- aranymrc example

- IDE x's settings from aranymrc file


2001/08/10 - milan
- real addressing now working correct

- the first step for reintegration of BasiliskII's CPU API

- Makefile depends repaired

- new sync with BasiliskII (CVS 24.7.2001)

- memory allocation back in main_unix.cpp - better for portability of real
  addressing, also ROM reading back there, not only POSIX, we have also
  non-POSIX OS's


2001/08/09 - joy

- added ata-new.cpp and cdrom.cpp from Bochs. Compilable but don't work yet (dunno why).


2001/08/08 - STanda

- no atexit crash ( atexit(ExitAll) called )

- numblock key mapping fixed. (/,*,-,+ keys fixed)

- bitplane to chunky conversion speedup (enrolling the conversion loop etc.)


2001/07/24 - joy
- portable stuff moved from Unix folder up to the main.cpp (should be cleaned up)

- bx_options moved from ata.cpp to parameters and should become global structure
  for aranym options

- floppy is not inserted automatically upon start - this is because my machine does not
  have a floppy connected and it caused aranym to hang. Should be a command line parameter
  like -floppy or something.


2001/07/20 - milan
- signals & pthread removed, now only SDL needs pthread

- mmu_op patched, setjmp/longjmp only, no exceptions

- some warnings "killed"

- "ndebug" integrated (only dbprintf), now D(bug()) without \n


2001/07/13 - STanda
- BLITTER function table restored. (the only - bad - thing is that all
  BLITTER member data must be public to be able to work like this)

- direct_truecolor mode made working again (was not probably since the
  HostScreen creation)

- note: the original fVDI driver sources compiled as they are and got
  corrupted (parachute) one. fVDI author notified and requested the
  whole source tree again.


2001/07/09 - STanda
- SDL comunity solved our mouse problem in Xs! Get the newest SDL cvs,
  make & install

- the grab_mouse is set by default when in fullscreen


2001/07/02 - milan
- new UAE CPU port from BasiliskII (CVS 25.6.2001)

- more portable


2001/06/18 - STanda - version increased to 0.0.5
- the SDL dependent parts of the code were moved to the HostScreen class.
  The HostScreen hostScreen; object is created statically in the hardware.cpp.
  (Most of the methods are inline and thus put into hostscreen.h file)

- several methods were renamed again (one example for all: getVideoMode() ->
  getScreenBpp()).

- some copyright (and CVS) comments added. Please - authors - put the CVS
  comments to the beginning and to the bottom of each source file conforming
  the template provided in the projects root directory (template.cpp).


2001/06/18 - STanda
- videl renderScreen() fix (lock & unlock screen added - again)

- the shift-break combination is now used to exit the emulator immediately
  (this was joy's code change, but forgotten to tell us ;))... anyway thanks
  for really good working videl now. I seem not to have any problems with
  color palette here :).


2001/06/17 - joy
- System Timer (200 Hz Timer C) should be precise even under heavy load now.
  The MFP stuff needs to be rewritten from scratch. My C++ OOP knowledge sucks.

- implemented virtual destructor in ICio class. Thanks to that the desctructor
  of RTC is called and saves the settings to disk (file "cmos" - actual folder,
  needs to be fixed - "$HOME/.aranym/cmos" looks like a good idea).

- NVRAM is read from disk/stored to disk automatically. You can use your
  favorite NVRAM editor now.

- system date/time is restored from RTC (host local time is used, not GMT).
  Year needs to be fixed yet.

- a lot of work on mouse cursor, still not as good as STonX's one.
  Mouse is grabbed automatically when you move the cursor over Aranym window.
  To release it hold Control and right click. Then you can leave the aranym
  window - when you move the mouse pointer back over the window it's grabbed
  again.

- it seems that Videl uses different color register sets for different color
  depths (as 4 and 16 color depth's colors are incorrect). Scary. Probably
  some compatibility nightmare.

- fixed too early SDL_Video initialization. Do not init stuff in constructors
  as they are invoked before main(). Fix the ExtFs stuff (install "A" ???)


2001/06/15 - joy
- VIDEL finished. Hardware color palette registers are used properly now.


2001/06/13 - STanda
- some VIDEL public routins adjusted to provide fVDI driver needed methods.
  (lockScreen(), unlockScreen(), getHostVideoramAddress())

- updateScreen() semantics was updated to SDL_UpdateRect... (only). The
  original method functionality was captured in new renderScreen() method


2001/06/12 - joy
- VIDEL rewritten using the new BASE_IO class. Got proper getVideoMode()
  and getWidth/Height (all stolen from Linux-m68k source code).
  Extended resolutions (using BlowUP030) work now perfectly (e.g. 1024x768).

- new DSP module is based on the new BASE_IO - you see, it's easy to write
  HW emulation stuff now.


2001/06/08 - joy
- highly unfinished, very preliminary, often crashing support for extended
  VIDEL resolutions. I know how to fix it, just give me some time.


2001/06/06 - joy
- '--grab_mouse' command line switch for X-Windows

- floppy can be inserted and removed in run-time. Press F11 to insert
  a floppy read-only. Hold Shift and press F11 to insert the floppy read-write.
  Make sure you have rw permissions on /dev/fd0 for this.
  Press F12 to remove a floppy. It seems to be unnecessary to manually remove
  the floppy each time since the writting should be synchronized (O_SYNC).

  This is not a final stage yet - if we stopped supporting disk images we
  could make the floppy inserting/removing fully automatic.


2001/06/05 - STanda
- extfs: the drives are assignable from commandline option -disk (-d)
  The AUTO/CONFIG.SYS must still contain the conresponding drive-letter
  assignment with the -d options on the commandline.

- the paramenters.cpp contains the drive assignment which is read by
  ExtFs.init() method (called from main_unix.cpp)

- the short -debug option was redesigned to -D


2001/05/29 - joy - version increased to 0.0.3
- major speed up (22 -> 27 thousand dhrystones) thanks to moving setjmp()
  out of main CPU loop

- excep_no var removed from memory.cpp and newcpu.cpp

- fixed VBL invocation (main_unix.cpp)


2001/05/29 - joy - version increased to 0.0.2
- uae_cpu/memory.h - you can enable or disable CHECK_MEMORY_END.
  When enabled, direct_truecolor bombs out in early stage of TOS boot (because
  TOS cannot write to videoram).
  When disabled, FastRAM works (just run FASTRAM.PRG from the desktop and
  you'll get 32 MB of additional fast ram).

- 'boot_color_depth' switch works now thanks to late initializing of RTC module
  in HWInit().

- 'monitor' switch allows you to choose between VGA and TV connected on Videl
  output.

- 'direct_truecolor' switch allows you to patch TOS so that Videl VideoRAM
  is set directly to host's VideoRAM. Thus VIDEL writes directly to host's
  VGA card video memory (if framebuffer is used as the SDL_VIDEODRIVER).


2001/05/28 - joy
- implemented proper Bus Error (hardware.cpp and others). This helps
  in a number of places, namely in FPU detection routines.

- fixed floppy emulation (fdc.cpp). STonX code contained wrong HW register
  addresses. I found it when I enabled FastRAM - the FDC was crashing
  the virtual machine.

- added memory bounds checking (memory.h). Ill behaving programs (and bad FDC
  emulation, as mentioned above :) won't crash the virtual machine anymore!

- new memory allocation (main_unix.cpp), enables 32 MB of FastRAM.
