2001/07/24 - joy
- portable stuff moved from Unix folder up to the main.cpp (should be cleaned up)

- bx_options moved from ata.cpp to parameters and should become global structure
  for aranym options

- floppy is not inserted automatically upon start - this is because my machine does not
  have a floppy connected and it caused aranym to hang. Should be a command line parameter
  like -floppy or something.
  

2001/07/20 - milan
- signals & pthread removed, now only SDL needs pthread

- mmu_op patched, setjmp/longjmp only, no exceptions

- some warnings "killed"

- "ndebug" integrated (only dbprintf), now D(bug()) without \n
  

2001/07/13 - STanda
- BLITTER function table restored. (the only - bad - thing is that all
  BLITTER member data must be public to be able to work like this)

- direct_truecolor mode made working again (was not probably since the
  HostScreen creation)

- note: the original fVDI driver sources compiled as they are and got
  corrupted (parachute) one. fVDI author notified and requested the
  whole source tree again.
  

2001/07/09 - STanda 
- SDL comunity solved our mouse problem in Xs! Get the newest SDL cvs,
  make & install

- the grab_mouse is set by default when in fullscreen
  

2001/07/02 - milan
- new UAE CPU port from BasiliskII (CVS 25.6.2001)

- more portable
  

2001/06/18 - STanda - version increased to 0.0.5
- the SDL dependent parts of the code were moved to the HostScreen class.
  The HostScreen hostScreen; object is created statically in the hardware.cpp.
  (Most of the methods are inline and thus put into hostscreen.h file)

- several methods were renamed again (one example for all: getVideoMode() ->
  getScreenBpp()).

- some copyright (and CVS) comments added. Please - authors - put the CVS
  comments to the beginning and to the bottom of each source file conforming
  the template provided in the projects root directory (template.cpp).
  

2001/06/18 - STanda
- videl renderScreen() fix (lock & unlock screen added - again)

- the shift-break combination is now used to exit the emulator immediately
  (this was joy's code change, but forgotten to tell us ;))... anyway thanks
  for really good working videl now. I seem not to have any problems with
  color palette here :).


2001/06/17 - joy
- System Timer (200 Hz Timer C) should be precise even under heavy load now.
  The MFP stuff needs to be rewritten from scratch. My C++ OOP knowledge sucks.

- implemented virtual destructor in ICio class. Thanks to that the desctructor
  of RTC is called and saves the settings to disk (file "cmos" - actual folder,
  needs to be fixed - "$HOME/.aranym/cmos" looks like a good idea).

- NVRAM is read from disk/stored to disk automatically. You can use your
  favorite NVRAM editor now.

- system date/time is restored from RTC (host local time is used, not GMT).
  Year needs to be fixed yet.

- a lot of work on mouse cursor, still not as good as STonX's one.
  Mouse is grabbed automatically when you move the cursor over Aranym window.
  To release it hold Control and right click. Then you can leave the aranym
  window - when you move the mouse pointer back over the window it's grabbed
  again.

- it seems that Videl uses different color register sets for different color
  depths (as 4 and 16 color depth's colors are incorrect). Scary. Probably
  some compatibility nightmare.

- fixed too early SDL_Video initialization. Do not init stuff in constructors
  as they are invoked before main(). Fix the ExtFs stuff (install "A" ???)


2001/06/15 - joy
- VIDEL finished. Hardware color palette registers are used properly now.


2001/06/13 - STanda
- some VIDEL public routins adjusted to provide fVDI driver needed methods.
  (lockScreen(), unlockScreen(), getHostVideoramAddress())

- updateScreen() semantics was updated to SDL_UpdateRect... (only). The
  original method functionality was captured in new renderScreen() method


2001/06/12 - joy
- VIDEL rewritten using the new BASE_IO class. Got proper getVideoMode()
  and getWidth/Height (all stolen from Linux-m68k source code).
  Extended resolutions (using BlowUP030) work now perfectly (e.g. 1024x768).

- new DSP module is based on the new BASE_IO - you see, it's easy to write
  HW emulation stuff now.


2001/06/08 - joy
- highly unfinished, very preliminary, often crashing support for extended
  VIDEL resolutions. I know how to fix it, just give me some time.


2001/06/06 - joy
- '--grab_mouse' command line switch for X-Windows

- floppy can be inserted and removed in run-time. Press F11 to insert
  a floppy read-only. Hold Shift and press F11 to insert the floppy read-write.
  Make sure you have rw permissions on /dev/fd0 for this.
  Press F12 to remove a floppy. It seems to be unnecessary to manually remove
  the floppy each time since the writting should be synchronized (O_SYNC).

  This is not a final stage yet - if we stopped supporting disk images we
  could make the floppy inserting/removing fully automatic.


2001/06/05 - STanda
- extfs: the drives are assignable from commandline option -disk (-d)
  The AUTO/CONFIG.SYS must still contain the conresponding drive-letter
  assignment with the -d options on the commandline.

- the paramenters.cpp contains the drive assignment which is read by
  ExtFs.init() method (called from main_unix.cpp)

- the short -debug option was redesigned to -D
  

2001/05/29 - joy - version increased to 0.0.3
- major speed up (22 -> 27 thousand dhrystones) thanks to moving setjmp()
  out of main CPU loop

- excep_no var removed from memory.cpp and newcpu.cpp

- fixed VBL invocation (main_unix.cpp)
  

2001/05/29 - joy - version increased to 0.0.2
- uae_cpu/memory.h - you can enable or disable CHECK_MEMORY_END.
  When enabled, direct_truecolor bombs out in early stage of TOS boot (because
  TOS cannot write to videoram).
  When disabled, FastRAM works (just run FASTRAM.PRG from the desktop and
  you'll get 32 MB of additional fast ram).

- 'boot_color_depth' switch works now thanks to late initializing of RTC module
  in HWInit().

- 'monitor' switch allows you to choose between VGA and TV connected on Videl
  output.

- 'direct_truecolor' switch allows you to patch TOS so that Videl VideoRAM
  is set directly to host's VideoRAM. Thus VIDEL writes directly to host's
  VGA card video memory (if framebuffer is used as the SDL_VIDEODRIVER).
  

2001/05/28 - joy
- implemented proper Bus Error (hardware.cpp and others). This helps
  in a number of places, namely in FPU detection routines.

- fixed floppy emulation (fdc.cpp). STonX code contained wrong HW register
  addresses. I found it when I enabled FastRAM - the FDC was crashing
  the virtual machine.

- added memory bounds checking (memory.h). Ill behaving programs (and bad FDC
  emulation, as mentioned above :) won't crash the virtual machine anymore!

- new memory allocation (main_unix.cpp), enables 32 MB of FastRAM.
