# Unix makefile for Basilisk II

## System specific configuration
@SET_MAKE@
SHELL = /bin/sh

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
datadir = @datadir@
mandir = @mandir@
man1dir = $(mandir)/man1
docdir = @prefix@/share/doc

DESTDIR =

CC = @CC@
CXX = @CXX@
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
CPPFLAGS = @CPPFLAGS@ -I../include -I. @CPUINCLUDES@
DEFS = @DEFS@ @DEFINES@ -D_REENTRANT -DDATADIR=\"$(datadir)/$(APP)\"
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
SDL_LIBS = @SDL_LIBS@
SDL_CONFIG = @SDL_CONFIG@
SDL_CFLAGS = @SDL_CFLAGS@
TV_LIBS = @TV_LIBS@
TV_CONFIG = @TV_CONFIG@
TV_CFLAGS = @TV_CFLAGS@
SYSSRCS = @SYSSRCS@
CPUSRCS = @CPUSRCS@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ -s
INSTALL_DATA = @INSTALL_DATA@

host_alias = @host_alias@
host_triplet = @host@

## Files
SRCS = ../main.cpp \
	main_unix.cpp \
	vm_alloc.cpp \
	../acia.cpp \
	../acsifdc.cpp \
	../ata.cpp \
	../blitter.cpp \
	../cdrom.cpp \
	../cfgopts.c \
	../dsp.cpp \
	../emul_op.cpp \
	../extfs.cpp \
	../fakeio.cpp \
	../fdc.cpp \
	../fvdidrv.cpp \
	../hardware.cpp \
	../gfxprimitives.cpp \
	../hostscreen.cpp \
	../ide.cpp \
	../identify.cpp \
	../mfp.cpp \
	../mmu.cpp \
	../ndebug.cpp \
	../parameters.cpp \
	../rtc.cpp \
	../videl.cpp \
	../yamaha.cpp \
	../host.cpp \
	../araobjs.cpp \
	../aradata.cpp \
	$(SYSSRCS) \
	$(CPUSRCS)
APP = aranym
APP_STATIC = aranym-static
APPCONFTV = aranymrc

## Rules
.PHONY: install installdirs uninstall mostlyclean clean distclean depend dep
.SUFFIXES:
.SUFFIXES: .c .cpp .s .o .h

all: $(APP)

OBJ_DIR = obj
$(OBJ_DIR)::
	@[ -d $(OBJ_DIR) ] || mkdir $(OBJ_DIR) > /dev/null 2>&1

define SRCS_LIST_TO_OBJS
	$(addprefix $(OBJ_DIR)/, $(addsuffix .o, $(foreach file, $(SRCS), \
	$(basename $(notdir $(file))))))
endef

define DEPSRCS
	$(addsuffix .o, $(foreach file, $(SRCS), \
	$(basename $(notdir $(file)))))
endef

OBJS = $(SRCS_LIST_TO_OBJS)

SRC_PATHS += $(sort $(foreach file, $(SRCS), $(dir $(file))))
VPATH :=
VPATH += $(addprefix :, $(subst  ,:, $(filter-out $($(subst, :, ,$(VPATH))), $(SRC_PATHS))))

$(APP): $(OBJ_DIR) $(OBJS)
	$(CXX) -o $(APP) $(LDFLAGS) $(OBJS) $(LIBS)

$(APP_STATIC): $(OBJ_DIR) $(OBJS)
	$(CXX) -o $(APP_STATIC) -static $(LDFLAGS) $(OBJS) $(LIBS)

install: $(APP) installdirs
	$(INSTALL_PROGRAM) $(APP) $(DESTDIR)$(bindir)/$(APP)
	$(INSTALL_DATA) ../ChangeLog $(DESTDIR)$(docdir)/$(APP)/changelog
	$(INSTALL_DATA) ../TODO $(DESTDIR)$(docdir)/$(APP)/TODO
	$(INSTALL_DATA) ../atari/newdesk.inf $(DESTDIR)$(datadir)/$(APP)/atari/newdesk.inf
	$(INSTALL_DATA) ../atari/fandafs/fandafs.dos.bz2 $(DESTDIR)$(datadir)/$(APP)/atari/fandafs/fandafs.dos.bz2
	$(INSTALL_DATA) ../atari/tools/fastram.prg.bz2 $(DESTDIR)$(datadir)/$(APP)/atari/tools/fastram.prg.bz2
	$(INSTALL_DATA) ../atari/tools/gemram.prg.bz2 $(DESTDIR)$(datadir)/$(APP)/atari/tools/gemram.prg.bz2

installdirs:
	$(SHELL) mkinstalldirs $(DESTDIR)$(bindir) $(DESTDIR)$(man1dir) $(DESTDIR)$(datadir)/$(APP) $(DESTDIR)$(datadir)/$(APP)/atari $(DESTDIR)$(datadir)/$(APP)/atari/createdisk $(DESTDIR)$(datadir)/$(APP)/atari/fandafs $(DESTDIR)$(datadir)/$(APP)/atari/fvdi $(DESTDIR)$(datadir)/$(APP)/atari/tools $(DESTDIR)$(docdir)/$(APP)

uninstall:
	rm -f $(DESTDIR)$(bindir)/$(APP)
	rm -f $(DESTDIR)$(docdir)/$(APP)/changelog
	rm -f $(DESTDIR)$(docdir)/$(APP)/TODO
	rm -f $(DESTDIR)$(datadir)/$(APP)/atari/newdesk.inf
	rm -f $(DESTDIR)$(datadir)/$(APP)/atari/fandafs/fandafs.dos.bz2
	rm -f $(DESTDIR)$(datadir)/$(APP)/atari/tools/fastram.prg.bz2
	rm -f $(DESTDIR)$(datadir)/$(APP)/atari/tools/gemram.prg.bz2
	rmdir $(DESTDIR)$(datadir)/$(APP)/atari/createdisk
	rmdir $(DESTDIR)$(datadir)/$(APP)/atari/fandafs
	rmdir $(DESTDIR)$(datadir)/$(APP)/atari/fvdi
	rmdir $(DESTDIR)$(datadir)/$(APP)/atari/tools
	rmdir $(DESTDIR)$(datadir)/$(APP)/atari
	rmdir $(DESTDIR)$(datadir)/$(APP)
	rmdir $(DESTDIR)$(docdir)/$(APP)

mostlyclean:
	rm -f $(APP) $(OBJ_DIR)/* core* *.core *~ *.bak $(APPCONFTV)

clean: mostlyclean
	rm -f cpuemu.cpp cpudefs.cpp cputmp*.s cpufast*.s cpustbl.cpp cputbl.h

distclean: clean
	rm -rf $(OBJ_DIR)
	rm -f Makefile
	rm -f config.cache config.log config.status config.h

bindistdirs:
	$(SHELL) mkinstalldirs tmpdist tmpdist$(bindir) tmpdist$(man1dir) tmpdist$(datadir)/$(APP) tmpdist$(datadir)/$(APP)/atari tmpdist$(datadir)/$(APP)/atari/createdisk tmpdist$(datadir)/$(APP)/atari/fandafs tmpdist$(datadir)/$(APP)/atari/fvdi tmpdist$(datadir)/$(APP)/atari/tools tmpdist$(docdir)/$(APP)

bindist: $(APP) bindistdirs
	$(INSTALL_PROGRAM) $(APP) tmpdist$(bindir)/$(APP)
	$(INSTALL_DATA) ../ChangeLog tmpdist$(docdir)/$(APP)/changelog
	$(INSTALL_DATA) ../TODO tmpdist$(docdir)/$(APP)/TODO
	$(INSTALL_DATA) ../atari/newdesk.inf tmpdist$(datadir)/$(APP)/atari/newdesk.inf
	$(INSTALL_DATA) ../atari/fandafs/fandafs.dos.bz2 tmpdist$(datadir)/$(APP)/atari/fandafs/fandafs.dos.bz2
	$(INSTALL_DATA) ../atari/tools/fastram.prg.bz2 tmpdist$(datadir)/$(APP)/atari/tools/fastram.prg.bz2
	$(INSTALL_DATA) ../atari/tools/gemram.prg.bz2 tmpdist$(datadir)/$(APP)/atari/tools/gemram.prg.bz2
	chmod -R a+r tmpdist
	cd tmpdist && GZIP=--best tar chozf ../$(APP).tar.gz *
	rm -rf tmpdist

devdist: distclean 
	rm -f aclocal.m4 cmos config.h.in configure
	cd ../../../ && GZIP=--best tar chozf $(APP).tar.gz aranym

depend dep:
	makedepend $(CPPFLAGS) $(DEFS) -Y. $(SRCS) -p$(OBJ_DIR)/ 2>/dev/null
	sed -n '/^# DO NOT DELETE THIS LINE -- make depend depends on it./,$$p' < Makefile > Makefile.wrk
	sed -n '1,/^# DO NOT DELETE THIS LINE -- make depend depends on it./p' < Makefile > Makefile.new
	mv Makefile.new Makefile
	tail +2 Makefile.wrk | sed 's/\/..\/uae_cpu\/fpu\//\//' > Makefile.new
	mv Makefile.new Makefile.wrk
	sed 's/\/..\/uae_cpu\//\//' < Makefile.wrk > Makefile.new
	mv Makefile.new Makefile.wrk
	sed 's/\/..\//\//' < Makefile.wrk >> Makefile
	rm -f Makefile.wrk

$(OBJ_DIR)/%.o : %.c
	$(CC) $(CPPFLAGS) $(DEFS) -Wall $(CFLAGS) -c $< -o $@
$(OBJ_DIR)/%.o : %.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -g -Wall -Wtraditional -Winline $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/%.o : %.s
	$(CC) $(CPPFLAGS) $(DEFS) $(CFLAGS) -c $< -o $@

$(OBJ_DIR)/cpuopti: $(OBJ_DIR)/cpuopti.o
	$(CC) $(LDFLAGS) -o $(OBJ_DIR)/cpuopti $(OBJ_DIR)/cpuopti.o
$(OBJ_DIR)/build68k: $(OBJ_DIR)/build68k.o
	$(CC) $(LDFLAGS) -o $(OBJ_DIR)/build68k $(OBJ_DIR)/build68k.o
$(OBJ_DIR)/gencpu: $(OBJ_DIR)/gencpu.o $(OBJ_DIR)/readcpu.o $(OBJ_DIR)/cpudefs.o
	$(CXX) $(LDFLAGS) -o $(OBJ_DIR)/gencpu $(OBJ_DIR)/gencpu.o $(OBJ_DIR)/readcpu.o $(OBJ_DIR)/cpudefs.o
cpudefs.cpp: $(OBJ_DIR)/build68k ../uae_cpu/table68k
	$(OBJ_DIR)/build68k <../uae_cpu/table68k >cpudefs.cpp
cpustbl.cpp: cpuemu.cpp
cputbl.h: cpuemu.cpp

cpuemu.cpp: $(OBJ_DIR)/gencpu
	$(OBJ_DIR)/gencpu

$(OBJ_DIR)/cpuemu1.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_1 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu2.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_2 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu3.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_3 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu4.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_4 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu5.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_5 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu6.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_6 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu7.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_7 $(CXXFLAGS) -c $< -o $@
$(OBJ_DIR)/cpuemu8.o: cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_8 $(CXXFLAGS) -c $< -o $@

cpufast.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -S $(CXXFLAGS) $< -o cputmp.s
	$(OBJ_DIR)/cpuopti <cputmp.s >$@ || mv cputmp.s $@
	rm -f cputmp.s
cpufast1.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_1 -S $(CXXFLAGS) $< -o cputmp1.s
	$(OBJ_DIR)/cpuopti <cputmp1.s >$@ || mv cputmp1.s $@
	rm -f cputmp1.s
cpufast2.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_2 -S $(CXXFLAGS) $< -o cputmp2.s
	$(OBJ_DIR)/cpuopti <cputmp2.s >$@ || mv cputmp2.s $@
	rm -f cputmp2.s
cpufast3.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_3 -S $(CXXFLAGS) $< -o cputmp3.s
	$(OBJ_DIR)/cpuopti <cputmp3.s >$@ || mv cputmp3.s $@
	rm -f cputmp3.s
cpufast4.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_4 -S $(CXXFLAGS) $< -o cputmp4.s
	$(OBJ_DIR)/cpuopti <cputmp4.s >$@ || mv cputmp4.s $@
	rm -f cputmp4.s
cpufast5.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_5 -S $(CXXFLAGS) $< -o cputmp5.s
	$(OBJ_DIR)/cpuopti <cputmp5.s >$@ || mv cputmp5.s $@
	rm -f cputmp5.s
cpufast6.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_6 -S $(CXXFLAGS) $< -o cputmp6.s
	$(OBJ_DIR)/cpuopti <cputmp6.s >$@ || mv cputmp6.s $@
	rm -f cputmp6.s
cpufast7.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_7 -S $(CXXFLAGS) $< -o cputmp7.s
	$(OBJ_DIR)/cpuopti <cputmp7.s >$@ || mv cputmp7.s $@
	rm -f cputmp7.s
cpufast8.s: cpuemu.cpp $(OBJ_DIR)/cpuopti
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_8 -S $(CXXFLAGS) $< -o cputmp8.s
	$(OBJ_DIR)/cpuopti <cputmp8.s >$@ || mv cputmp8.s $@
	rm -f cputmp8.s

# ARAnyMrc
#
$(APPCONFTV): $(OBJ_DIR) $(OBJ_DIR)/aranymrc.o $(OBJ_DIR)/cfgoptsrc.o $(OBJ_DIR)/parametersrc.o $(OBJ_DIR)/parameters_unixrc.o $(OBJ_DIR)/ndebugrc.o
	$(CXX) -o $(APPCONFTV) $(LDFLAGS) $(OBJ_DIR)/aranymrc.o $(OBJ_DIR)/cfgoptsrc.o $(OBJ_DIR)/parametersrc.o $(OBJ_DIR)/parameters_unixrc.o $(OBJ_DIR)/ndebugrc.o $(LIBS) $(TV_LIBS)
	
$(OBJ_DIR)/aranymrc.o: ../aranymrc.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) $(TV_CFLAGS) -DCONFGUI -g -Wall -Wtraditional -Winline $(CXXFLAGS) -c ../aranymrc.cpp -o $@
$(OBJ_DIR)/cfgoptsrc.o: ../cfgopts.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DCONFGUI -g -Wall -Wtraditional -Winline $(CXXFLAGS) -c ../cfgopts.cpp -o $@
$(OBJ_DIR)/parametersrc.o: ../parameters.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DCONFGUI -g -Wall -Wtraditional -Winline $(CXXFLAGS) -c ../parameters.cpp -o $@
$(OBJ_DIR)/parameters_unixrc.o: parameters_unix.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DCONFGUI -g -Wall -Wtraditional -Winline $(CXXFLAGS) -c parameters_unix.cpp -o $@
$(OBJ_DIR)/ndebugrc.o: ../ndebug.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DCONFGUI -g -Wall -Wtraditional -Winline $(CXXFLAGS) -c ../ndebug.cpp -o $@

#-------------------------------------------------------------------------
# DO NOT DELETE THIS LINE -- make depend depends on it.
