2001/10/26 - milan
- support for instruction history now also in ndebug

- small change in m68k_run_1


2001/10/25 - joy
- when the aranym catches segmentation fault it releases mouse and keyboard
  and shows last 20 instructions prior the segfaulting instruction (only
  if compiled with --enable-fullhistory).

- InitROM() asks for 512 kB long file (on the net there are just 256 kB ROM
  images).

- Floppy stuff moved to fdc. Automatic mounting - first read/write with
  fallback to read only. Media Change trick prepared but disabled for now
  because the floppy does not read past 499 sector (try e.g. Diskus Read Test).
  Dunno what's wrong. Wonder if the floppy ever worked correctly?


2001/10/24 - STanda
- fVDI: Essential bugfixes added. Now the driver works properly except for the
  bugs in the fVDI engine. These are discussed with the fVDI author.
  The lines with a negative y coordinate are drawn properly now.


2001/10/23 - STanda
- Screenshot added to the website.
- fVDI: Mouse Is not hidden at the right and bottom screen edge.
  Is colorized properly. The shape's hotspot shift implemented.
  Shouldn't crash on higher resolutions than 640x400.
  Put pixel fixed to take the pattern in mind.
  The lineClipping fixed. The lines that starts and ends out of the screen
  are not drawn due to the fVDI.PRG beta engine.. the beta crashes sometimes too)
  The v0.95 works quite well, but with display bugs like no pictures in
  ST-Guide, wrong colors of Thing's keyboard cursor.
- the hardcoded screen resolution changed to the hostScreens one
  in mouseOut handling.


2001/10/19 - STanda
- fVDI: The driver updated to work with FVDI.PRG beta. This beta enables
        e.g. the monochrome images in ST-Guide and fixes many bugs.
        There is still a bug in new line clipping, but I just don't have
        time to fix it now. I know exactly what is the problem.


2001/10/18 - joy
- MD5 class added
- InitROM() detects both our ABTOS and the original TOS 4.04.
- InitROM() patches TOS 4.04


2001/10/17 - STanda
- README The sophics.cz replaced by atari.org for http access. The ftp
         and email addresses was left. (I don't know wheter aranym@atari.org
         works and the ftp must stay @sophics, the absolute path problems)
- ExtFs: Small bug fix. The Fsfirst&next returns the . and .. dirs too.
         (according to Julian Reschke's advice)
- Tools: The changes that were made and uploaded to JOY's ftp are in CVS now
         The README was modified a bit.


2001/10/16 - STanda
- fVDI:  The segfault bug in gfxLineColor removed.
- VIDEL: The 16, 24 and 32 destBpp are supported when #define SUPPORT_MULTIPLEDESTBPP
         in videl.cpp (the SDL surface depth setting is in hostscreen.cpp).


2001/10/16 - milan
- support for BasiliskII's monitor cxmon
- aranymrc now supports FastRAM's size.


2001/10/16 - STanda
- fVDI: The driver should be working now in TC (I finally got the Thing
        executed and looking correctly)


2001/10/09 - milan
- some changes in memory allocation, now support for malloc on dummy platforms


2001/10/08 - STanda
- fVDI: the blitting works on destination 16bpp (still no shadow buffer used).


2001/10/08 - STanda
- ALT+PrintScreen generates a snapshot file using the SDL_SaveBMP.

- Host OS dependent objects moved to the host.cpp(h) and aranym specific
  objects like ExtFs and FVDIDrv moved to araobjs.cpp(h)

- general cleanup of unused variables (fdc.cpp)

- the WEB pages updated


2001/10/02 - milan
- the first "public" version of "ndebug", some modes still disabled

- platform's independent memory allocation, if ARAnyM doesn't know better


2001/10/02 - joy
- ROM file reading back in main.cpp
- TTRAM renamed to FastRAM everywhere
- --ttram renamed to --fastram, -T renamed to -F
- --grab_mouse switch removed
- added 'cookie_MCH' config option, it holds hex long value
- maxInnerCounter in main.cpp should be tuned to your CPU speed.
  The lower your CPU is the lower the value should be.


2001/10/02 - STanda
- fVDI: blitArea screen2screen & mem2screen (TC) works now.

- fVDI, VIDEL: bitplane to chunky conversion is move into the HostScreen
  inline - should cause no performace penalty

2001/10/01 - STanda

- fVDI: drawLine supports the logical operations now.


2001/09/25 - milan
- cleaning of memory allocation


2001/09/21 [ARAnyM 0.0.8] - joy
- in a fVDI session (when VIDEL rendering is disabled) if VIDEL VideoRAM address
  is changed the VIDEL rendering is enabled again. This is essential for example
  when you reset the Atari machine (you want to see the Fuji logo, don't you? :)

- MFP TimerC emulation simplified - no more double TimerC interrupts as we
  are now calling the invoke200HzInterrupt each 5 milliseconds.

- hardware.cpp helper functions removed. Now modules call their public functions
  directly. It's better readable and faster this way, I think.


2001/09/20 - STanda
- fVDI: Off by one bug fixed in fillArea.

- fVDI: Separate functions for transparent and opaque background. gfxPrimitives
  methods moved to the HostScreen. Several methods made inline.
  fVDI driver Shouldn't cause BUS ERROR now.


2001/09/20 - joy
- fixed very annoying bug in direct_tc mode (no more segfaults at $e08ba8 I hope!)

- mouse code for host-client transformation is now conditional (only when not running
  in fullscreen).


2001/09/20 - STanda
- The fVDI driver update: colors work correctly, expandArea implemented
  to display icons and texts, putPixel speedup. Now it seems pretty fast
  when DEBUG is 0 ;)

- gfxprimitives cleanup


2001/09/19 - joy
- TT-RAM (or FastRAM) size entered on command line (--ttram) is in MB now.
- new .aranymrc option named "FastRAM", acts as the --tram switch.
- first release of aratools.tgz, available at ftp.sophics.cz/pub/aranym.
  FastRAM (or TT-RAM?) can be anything from 0 to about 112 MB (then it
  crashes, I suspect it's due to the weird Milan's virtual memory management).


2001/09/18 - joy
- keys remapped: Atari Help is on the F11 host key, Atari Undo is on F12 key.
  Keys PageUp/PageDown are mapped to Atari combo Shift+ArrowUp/Down which
  should work in most GEM programs (handy stuff, you get used to it fairly
  quickly).

- mouse behavior changed: first, it's grabbed automatically and centered
  on standard screen size (640x480). Second, with special tool support
  (right now modified Clocky - you find it in ftp.sophics.cz/pub/aranym)
  you are able to move the mouse out of the Atari aranym window. Works
  just like in vmware. Pity it has hardcoded GEM screen size right now.
  Needs to be fixed - made more flexible.

- ARADATA I/O registers are ready to support arbitrary FastRAM size and
  automatic StandaFS config.sys updating, I just need to write the tools
  for that.


2001/09/11 [ARAnyM 0.0.7] - joy
- real hard fight with Aniplayer. I found that it checks whether there's
  a $CAFEFADE number at $F4000014. This check was killing aranym since
  my check_ram_boundary() was broken (due to a number of stupid bugs).
  Anyway, this CAFEFADE signals that there can be a hardware located at
  that address already (it is flash ROM of Centurbo2 according to Didier)
  and that is a bad sign for us since we wanted to have the host videoram there.


2001/09/10 [ARAnyM 0.0.6] - joy
- proper check_ram_boundary in memory.h. Has to be always enabled, otherwise
  programs like e.g. Aniplayer can kill the whole aranym..
  FastRAM works again (still fixed to 32 MB).

- SDL_Timer is not used anymore. CPU now checks once in a while (currently
  each 100 m68k instructions) whether it's time to emulate an interrupt.
  The original behavior with timers may be enabled with -DUSE_TIMERS.


2001/09/09 - joy
- direct TrueColor works again
- clicking in fullscreen X11 works again (generally mouse grabbing works again)
- disabled the shit in main_unix.cpp (the memory management)
- fixed a few little bugs


2001/09/04 - joy
- milan's port of ata.cpp and cdrom.cpp from Bochs v1.2 now enables direct
  access to CD-ROM! Use "IsCDROM = Yes" in your [IDE1] section of aranym
  conf file.


2001/09/01 - milan
- switch for enabling full opcode's history for debugger


2001/08/31 - milan
- other small corrections for MMU

- memory access now a bit quicker


2001/08/29 - milan
- stupid buggy preversion of TV conf. GUI aranymrc, needs to rewrite in
  better form, something as powertweak's text mode conf. Output in
  aranymtest.rc file. Also needed to find problem with size of strings
  (buffer overflow).

- directive DebugOnStart from ARANYMRC changed to Bool_Tag

- patched stupid mistake by entry of debugger (Alt x Alt+Break)

- some small corrections for MMU

- newm68k_disasm hasn't any problem with memory addressing now
  (set/longjmp problem)


2001/08/29 - STanda

- VIDEL got the doRender flag with setter setRendering().
  The host_colors_uptodate variable name was changed to hostColorsSync.

- HostScreen got the doUpdate flag cleared upon initialization if the HWSURFACE
  was created.

- fVDIDriver got first version of drawLine and fillArea (thanks to SDL_gfxPrimitives).


2001/08/20 - milan

- support for autodetection of a real disk's geometry in Linux, also for
  createdisk.sh's disks, but new version of parameters.cpp needs reorganization
  in IDEx part

- patched ins. SBCD, ABCD, NBCD (uae 0.8.17), BDcc, Scc in table68k patched

- UAE FPU as default FPU (now better than i386 opt!)

- devdist in Makefile


2001/08/16 - Joy

- config file taken from PARCP. Feel free to extend the global_conf struct in parameters.cpp
  with more options.


2001/08/15 - STanda

- the videl.cpp ST compatible color palette handling added (thanks to Ctirad)


2001/08/13 - milan

- bindist in Makefile

- aranymrc example

- IDE x's settings from aranymrc file


2001/08/10 - milan
- real addressing now working correct

- the first step for reintegration of BasiliskII's CPU API

- Makefile depends repaired

- new sync with BasiliskII (CVS 24.7.2001)

- memory allocation back in main_unix.cpp - better for portability of real
  addressing, also ROM reading back there, not only POSIX, we have also
  non-POSIX OS's


2001/08/09 - joy

- added ata-new.cpp and cdrom.cpp from Bochs. Compilable but don't work yet (dunno why).


2001/08/08 - STanda

- no atexit crash ( atexit(ExitAll) called )

- numblock key mapping fixed. (/,*,-,+ keys fixed)

- bitplane to chunky conversion speedup (enrolling the conversion loop etc.)


2001/07/24 - joy
- portable stuff moved from Unix folder up to the main.cpp (should be cleaned up)

- bx_options moved from ata.cpp to parameters and should become global structure
  for aranym options

- floppy is not inserted automatically upon start - this is because my machine does not
  have a floppy connected and it caused aranym to hang. Should be a command line parameter
  like -floppy or something.


2001/07/20 - milan
- signals & pthread removed, now only SDL needs pthread

- mmu_op patched, setjmp/longjmp only, no exceptions

- some warnings "killed"

- "ndebug" integrated (only dbprintf), now D(bug()) without \n


2001/07/13 - STanda
- BLITTER function table restored. (the only - bad - thing is that all
  BLITTER member data must be public to be able to work like this)

- direct_truecolor mode made working again (was not probably since the
  HostScreen creation)

- note: the original fVDI driver sources compiled as they are and got
  corrupted (parachute) one. fVDI author notified and requested the
  whole source tree again.


2001/07/09 - STanda
- SDL comunity solved our mouse problem in Xs! Get the newest SDL cvs,
  make & install

- the grab_mouse is set by default when in fullscreen


2001/07/02 - milan
- new UAE CPU port from BasiliskII (CVS 25.6.2001)

- more portable


2001/06/18 - STanda - version increased to 0.0.5
- the SDL dependent parts of the code were moved to the HostScreen class.
  The HostScreen hostScreen; object is created statically in the hardware.cpp.
  (Most of the methods are inline and thus put into hostscreen.h file)

- several methods were renamed again (one example for all: getVideoMode() ->
  getScreenBpp()).

- some copyright (and CVS) comments added. Please - authors - put the CVS
  comments to the beginning and to the bottom of each source file conforming
  the template provided in the projects root directory (template.cpp).


2001/06/18 - STanda
- videl renderScreen() fix (lock & unlock screen added - again)

- the shift-break combination is now used to exit the emulator immediately
  (this was joy's code change, but forgotten to tell us ;))... anyway thanks
  for really good working videl now. I seem not to have any problems with
  color palette here :).


2001/06/17 - joy
- System Timer (200 Hz Timer C) should be precise even under heavy load now.
  The MFP stuff needs to be rewritten from scratch. My C++ OOP knowledge sucks.

- implemented virtual destructor in ICio class. Thanks to that the desctructor
  of RTC is called and saves the settings to disk (file "cmos" - actual folder,
  needs to be fixed - "$HOME/.aranym/cmos" looks like a good idea).

- NVRAM is read from disk/stored to disk automatically. You can use your
  favorite NVRAM editor now.

- system date/time is restored from RTC (host local time is used, not GMT).
  Year needs to be fixed yet.

- a lot of work on mouse cursor, still not as good as STonX's one.
  Mouse is grabbed automatically when you move the cursor over Aranym window.
  To release it hold Control and right click. Then you can leave the aranym
  window - when you move the mouse pointer back over the window it's grabbed
  again.

- it seems that Videl uses different color register sets for different color
  depths (as 4 and 16 color depth's colors are incorrect). Scary. Probably
  some compatibility nightmare.

- fixed too early SDL_Video initialization. Do not init stuff in constructors
  as they are invoked before main(). Fix the ExtFs stuff (install "A" ???)


2001/06/15 - joy
- VIDEL finished. Hardware color palette registers are used properly now.


2001/06/13 - STanda
- some VIDEL public routins adjusted to provide fVDI driver needed methods.
  (lockScreen(), unlockScreen(), getHostVideoramAddress())

- updateScreen() semantics was updated to SDL_UpdateRect... (only). The
  original method functionality was captured in new renderScreen() method


2001/06/12 - joy
- VIDEL rewritten using the new BASE_IO class. Got proper getVideoMode()
  and getWidth/Height (all stolen from Linux-m68k source code).
  Extended resolutions (using BlowUP030) work now perfectly (e.g. 1024x768).

- new DSP module is based on the new BASE_IO - you see, it's easy to write
  HW emulation stuff now.


2001/06/08 - joy
- highly unfinished, very preliminary, often crashing support for extended
  VIDEL resolutions. I know how to fix it, just give me some time.


2001/06/06 - joy
- '--grab_mouse' command line switch for X-Windows

- floppy can be inserted and removed in run-time. Press F11 to insert
  a floppy read-only. Hold Shift and press F11 to insert the floppy read-write.
  Make sure you have rw permissions on /dev/fd0 for this.
  Press F12 to remove a floppy. It seems to be unnecessary to manually remove
  the floppy each time since the writting should be synchronized (O_SYNC).

  This is not a final stage yet - if we stopped supporting disk images we
  could make the floppy inserting/removing fully automatic.


2001/06/05 - STanda
- extfs: the drives are assignable from commandline option -disk (-d)
  The AUTO/CONFIG.SYS must still contain the conresponding drive-letter
  assignment with the -d options on the commandline.

- the paramenters.cpp contains the drive assignment which is read by
  ExtFs.init() method (called from main_unix.cpp)

- the short -debug option was redesigned to -D


2001/05/29 - joy - version increased to 0.0.3
- major speed up (22 -> 27 thousand dhrystones) thanks to moving setjmp()
  out of main CPU loop

- excep_no var removed from memory.cpp and newcpu.cpp

- fixed VBL invocation (main_unix.cpp)


2001/05/29 - joy - version increased to 0.0.2
- uae_cpu/memory.h - you can enable or disable CHECK_MEMORY_END.
  When enabled, direct_truecolor bombs out in early stage of TOS boot (because
  TOS cannot write to videoram).
  When disabled, FastRAM works (just run FASTRAM.PRG from the desktop and
  you'll get 32 MB of additional fast ram).

- 'boot_color_depth' switch works now thanks to late initializing of RTC module
  in HWInit().

- 'monitor' switch allows you to choose between VGA and TV connected on Videl
  output.

- 'direct_truecolor' switch allows you to patch TOS so that Videl VideoRAM
  is set directly to host's VideoRAM. Thus VIDEL writes directly to host's
  VGA card video memory (if framebuffer is used as the SDL_VIDEODRIVER).


2001/05/28 - joy
- implemented proper Bus Error (hardware.cpp and others). This helps
  in a number of places, namely in FPU detection routines.

- fixed floppy emulation (fdc.cpp). STonX code contained wrong HW register
  addresses. I found it when I enabled FastRAM - the FDC was crashing
  the virtual machine.

- added memory bounds checking (memory.h). Ill behaving programs (and bad FDC
  emulation, as mentioned above :) won't crash the virtual machine anymore!

- new memory allocation (main_unix.cpp), enables 32 MB of FastRAM.
