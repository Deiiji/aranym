aranym.xif
==========

The xif interface for the eth0 interface for FreeMiNTnet.
Copy the .xif into your mint folder, install FreeMiNTnet and...
Usage:
     ifconfig eth0 addr u.v.w.x up
     route add u.v.w.x eth0
Then you can do ping u.v.w.x and somesuch and see what eg. ARP
does...

IMPORTANT: ATM aranym need to be run as a root to get the TAP
          interface else some error messages will be printed like these:
--- end --
ECE: init
ECE: if opened tap0

HHC894I Error setting MTU for tap0: Operation not permitted
HHC897I Error setting driving system IP addr for tap0: Permission denied
HHC897I Error setting Hercules IP addr for tap0: Permission denied
HHC897I Error setting netmask for tap0: Permission denied
HHC899I Error setting flags for tap0: Permission denied
initTap failure
--- end ---


How it works
------------

The ARAnyM establishes the TAP interface (using tuntap driver).
tuntap linux driver: /usr/src/linux/Documentation/networking/tuntap.txt
It's all hacked up to get it do at least something... study:
	VTUN (virtual tunnel)
		http://vtun.sourceforge.net/tun
	Hercules (s390 emulator)
		http://www.conmicro.cx/hercules/
	Basilisk II Homepage:
		http://www.uni-mainz.de/~bauec002/B2Main.html

After that the xif should trigger an interrupt on received packet from
the tap interface tunnel from the host OS.


Compilation
-----------
 * to compile the xfs you need the source tree of FreeMiNT (I used the
   uptodate 1.16 CVS branch), set up so that it compiles. Point the
   FREEMINT_SRC_HOME environment variable to its home (the
   COPYING.MiNT file is there).
 * use make.sh to compile
 * the binaries are placed into the .bin subfolder

 ARAnyM binary:
 * put --enable-ethernet to the configure

